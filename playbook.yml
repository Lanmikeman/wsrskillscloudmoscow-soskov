- hosts: all
  become: true
  vars_files:
    - vars/default.yml
 
- tasks:
    - name: Update apt
      apt: update_cache=yes
      
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes
      
    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']
   
    - name: UFW - Allow port 80
      ufw:
      rule: allow
      port: '80'
      proto: tcp
         
    - name: UFW - Allow port 8888
       ufw:
       rule: allow
       port: '8888'
       proto: tcp
         
    - name: UFW - Allow port 1467
       ufw:
       rule: allow
       port: '1467'
       proto: tcp

     - name: UFW - Allow all other incoming traffic by default
       ufw:
         state: enabled
         policy: allow
         direction: incoming

    - name: Setup SSH port 1467
      lineinfile:
         dest: "/etc/ssh/sshd_config"
         regexp: "^Port 22"
         line: "Port 1467"
       notify: "Restart sshd"

      - name: Allow key SSH auth
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#PubkeyAuthentication yes'
        line: 'PubkeyAuthentication yes'   
        
    - name: Add a new user named devops
     user:
          name: "{{ item.name }}"
          shell: /bin/bash
          password: "{{ item.pass }}"
          loop:
          
            - { name: 'Webdeveloper', pass: 'S52we9V6QTp7' }
            
            - { name: 'Devopsengineer', pass: 'dHy6sKGHsj2T' }
            
            - { name: 'Projectmanager', pass: 'oP92ugMSaCbe' }
            
   - name: Add devops user to the sudoers
     copy:
          dest: "/etc/sudoers.d/{{item}}"
          content: "{{item}}  ALL=(ALL)  NOPASSWD: ALL"
          loop:
          
            - 'Webdeveloper'
            
            - 'Devopsengineer'
            
            - 'Projectmanager'

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest
 
    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Transfer and execute a script.
      hosts: server
      remote_user: test_user
      sudo: yes
      tasks:
         - name: Transfer the script
           copy: src=docker-compose.sh dest=/home/test_user mode=0777
         - name: Execute the script
           command: sh /home/test_user/test.sh

     - name: Creates directory
       file:
          path: /skillcloud-ngsite
          state: directory
          mode: 0777

       - name: Ansible copy file force
          copy:
            src: ~/
            dest: /skillcloud-ngsite
            force: no

       - name: Wait for server to restart
          reboot:
          reboot_timeout: 3600
